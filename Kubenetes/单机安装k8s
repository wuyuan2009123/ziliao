参考地址：
https://blog.csdn.net/qq_27384769/article/details/102928756

步骤1：CentOS系统自带的防火墙服务：
systemctl disable firewalld
systemctl stop firewalld
步骤2：安装etcd和Kubernetes（自动附带安装Docker）
yum install -y etcd kubernetes
步骤3：修改/etc/sysconfig/docker文件。
修改OPTIONS的内容为：

OPTIONS='--selinux-enabled=false --insecure-registry gcr.io'
步骤4：修改/etc/kubernetes/apiserver文件
修改KUBE_ADMISSION_CONTROL的内容为：去除KUBE_ADMISSION_CONTROL 中的 SecurityContextDeny,ServiceAccount

KUBE_ADMISSION_CONTROL="--admission-control=NamespaceLifecycle,NamespaceExists,LimitRanger,ResourceQuota"
其他内容保持原样即可。

安装python-rhsm-certificates包
wget http://mirror.centos.org/centos/7/os/x86_64/Packages/python-rhsm-certificates-1.19.10-1.el7_4.x86_64.rpm
rpm -ivh python-rhsm-certificates-1.19.10-1.el7_4.x86_64.rpm（不需要执行）

rpm2cpio python-rhsm-certificates-1.19.10-1.el7_4.x86_64.rpm | cpio -iv --to-stdout ./etc/rhsm/ca/redhat-uep.pem | tee /etc/rhsm/ca/redhat-uep.pem

步骤5：依次启动下列服务：
systemctl start etcd
systemctl start docker
systemctl start kube-apiserver
systemctl start kube-controller-manager
systemctl start kube-scheduler
systemctl start kubelet
systemctl start kube-proxy

至此，一个单机版的Kubernetes环境已经搭建完成了。 我们可以利用该环境进行Kubernetes功能的学习和使用。
检查版本
   etcdctl -v
   docker -v
   kubectl version
查看启动状态

    etcdctl member list
    docker ps

下面，我们来启动该服务：

kubectl create -f mysql-rc.yaml

如果出现以下READY数目始终为0：解决方案
命令执行后，我们可以执行如下命令看查询RC列表
从结果中，我们可以看到，我们的RC的READY数目始终为0，说明没有正常启动。 下面，我们需要去定位一下原因：kubectl describe pod mysql 【查看pod 启动失败原因】






